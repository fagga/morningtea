#!/usr/bin/perl
use strict;
use warnings;

my $config_file = $ARGV[0] || $ENV{HOME}."/.morningtea";
open(F, "<$config_file") or die "Can't read file $config_file: $!";
my @config = <F>;
close(F);
chomp(@config);  # remove trailing newlines

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$wday = 7 if($wday == 0);  # Week starts with 1 (monday) and ends with 7 (sunday)
$yday++;                   # Day of year starts with 1, not 0

# The first line of $config_file is a command to start the browser
system(shift(@config));

# The second line is the command that opens a link
my $url_cmd = shift(@config);
foreach my $url (read_urls()) {
    my $cmd = $url_cmd;
    $cmd =~ s/%url/$url/g;
    system($cmd);
}


sub read_urls {
    my @urls;
    foreach my $line (@config) {
        if($line =~ /(\S+)\s*:\s*(\S+)/ig) {
            push(@urls, $2) if(pattern_matches($1));
        }
    }
    return @urls;
}

sub pattern_matches {
    my $pattern = shift;

    # Every n'th day
    if($pattern =~ m~^(\d+)$~) {
        my ($wanted, $days_since_epoch) = ($1, (sprintf "%d", time/86400));
	return 1 if($days_since_epoch % $wanted == 0);

    }

    elsif($pattern =~ m~/(w|m|y)$~) {
        my $today = {y=>$yday, m=>$mday, w=>$wday}->{$1};  # Amnâ€™t I clever!

	# Day x to y of each week/month/year
	if($pattern =~ m~^(\d+)-(\d+)/(w|m|y)$~) {
	    return 1 if($today >= $1 and $today <= $2);
	}

	# List of days of each week/month/year
        if($pattern =~ m~^([\d,]+)/(w|m|y)$~) {
            my @list = split(',', $1);
            foreach my $wanted (@list) {
                return 1 if($today == $wanted);
            }
        }
    }

    return 0;
}
